{"ast":null,"code":"var _jsxFileName = \"/Users/nana/Desktop/twitterApp/frontend/src/features/register/components/RegisterNameInput/RegisterNameInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ValidatedTextInput } from \"../../../../components/ValidatedInput/ValidatedTextInput\";\nimport { useDispatch } from \"react-redux\";\nimport { updateRegister } from \"../../../../redux/Slices/RegisterSlice\";\nimport { ValidateName } from \"../../../../services/Validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RegisterNameInput = _ref => {\n  _s();\n  let {\n    firstName,\n    lastName\n  } = _ref;\n  //use state functions for firstname and lastname\n  const [firstValid, setFirstValid] = useState(true);\n  const [lastValid, setLastValid] = useState(true);\n  const dispatch = useDispatch();\n  const updateName = e => {\n    if (e.target.name === 'firstName') {\n      dispatch(updateRegister({\n        name: e.target.name,\n        value: e.target.value\n      }));\n      let valid = ValidateName(e.target.value);\n      setFirstValid(valid);\n      dispatch(updateRegister({\n        name: 'firstNameValid',\n        value: valid\n      }));\n    }\n    if (e.target.name === 'lastName') {\n      dispatch(updateRegister({\n        name: e.target.name,\n        value: e.target.value\n      }));\n      let valid = ValidateName(e.target.value);\n      setLastValid(valid);\n      dispatch(updateRegister({\n        name: 'lastNameValid',\n        value: valid\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-name-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-name-content\",\n      children: [/*#__PURE__*/_jsxDEV(ValidatedTextInput, {\n        valid: firstValid,\n        name: \"firstName\",\n        label: \"First\",\n        changeValue: updateName,\n        data: firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), firstValid ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"register-name-error\",\n        children: \"What's your name?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-name-content\",\n      children: /*#__PURE__*/_jsxDEV(ValidatedTextInput, {\n        valid: lastValid,\n        name: \"lastName\",\n        label: \"Last\",\n        changeValue: updateName,\n        data: lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterNameInput, \"iew6CgdM2xjU+Ua+Fe1JMgGN/5g=\", false, function () {\n  return [useDispatch];\n});\n_c = RegisterNameInput;\nvar _c;\n$RefreshReg$(_c, \"RegisterNameInput\");","map":{"version":3,"names":["React","useState","ValidatedTextInput","useDispatch","updateRegister","ValidateName","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterNameInput","_ref","_s","firstName","lastName","firstValid","setFirstValid","lastValid","setLastValid","dispatch","updateName","e","target","name","value","valid","className","children","label","changeValue","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nana/Desktop/twitterApp/frontend/src/features/register/components/RegisterNameInput/RegisterNameInput.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport { ValidatedTextInput } from \"../../../../components/ValidatedInput/ValidatedTextInput\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../../../redux/Store\";\nimport { updateRegister } from \"../../../../redux/Slices/RegisterSlice\";\nimport { ValidateName } from \"../../../../services/Validators\";\n\ninterface RegisterNameInputProps{\n    firstName: string;\n    lastName: string;\n}\n\nexport const RegisterNameInput:React.FC<RegisterNameInputProps> = ({firstName, lastName}) => {\n\n    //use state functions for firstname and lastname\n    const [firstValid, setFirstValid] = useState<boolean> (true);\n    const [lastValid, setLastValid] = useState<boolean>(true);\n   \n\n    const dispatch:AppDispatch = useDispatch();\n\n    const updateName = (e:React.ChangeEvent<HTMLInputElement>):void =>{\n        if(e.target.name === 'firstName'){\n            dispatch(updateRegister({name:e.target.name, value:e.target.value}))\n\n            let valid = ValidateName(e.target.value);\n            setFirstValid(valid);\n\n            dispatch(updateRegister({name: 'firstNameValid', value:valid})); \n        }\n        if(e.target.name === 'lastName'){\n            dispatch(updateRegister({name:e.target.name, value:e.target.value}))\n\n            let valid = ValidateName(e.target.value);\n            setLastValid(valid);\n\n            dispatch(updateRegister({name: 'lastNameValid', value:valid})); \n        }\n    }\n\n    return(\n        <div className=\"register-name-input\">\n            <div className=\"register-name-content\">\n            <ValidatedTextInput valid={firstValid} name={\"firstName\"} label={\"First\"} changeValue={updateName} data={firstName}/>\n                {firstValid ? <></> : <span className=\"register-name-error\">What's your name?</span>}\n            </div>\n            <div className=\"register-name-content\">\n            <ValidatedTextInput valid={lastValid} name={\"lastName\"} label={\"Last\"} changeValue={updateName} data={lastName}/>\n            </div>\n\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}