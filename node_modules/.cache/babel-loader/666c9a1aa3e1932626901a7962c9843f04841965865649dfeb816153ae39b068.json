{"ast":null,"code":"var _jsxFileName = \"/Users/nana/Desktop/twitterApp/frontend/src/features/register/components/RegisterNextButton/RegisterNextButton.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { incrementStep, registerUser } from \"../../../../redux/Slices/RegisterSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StyledNextButton = styled.button`\n    width: 75%;\n    height: 52px;\n    font-size: 17px;\n    color: white;\n    background-color: ${props => props.color === 'blue' ? props.theme.colors.blue : props.theme.colors.black};\n    opacity: ${props => props.active ? 1.0 : .5};\n    border-radius: 50px;\n    border:none;\n    cursor: ${props => props.active ? \"pointer\" : \"auto\"};\n`;\n_c = StyledNextButton;\nexport const RegisterNextButton = _ref => {\n  _s();\n  let {\n    step\n  } = _ref;\n  const state = useSelector(state => state.reggister);\n  const dispatch = useDispatch();\n  const nextStep = () => {\n    dispatch(incrementStep());\n  };\n  const sendUserInfo = () => {\n    const user = {\n      firstName: state.firstName,\n      lastName: state.lastName,\n      email: state.email,\n      //dob: cleanDateForRequest(state.dob),\n      dob: new Date(state.dob.year, state.dob.month - 1,\n      // JavaScript months are 0-based, so we subtract 1\n      state.dob.day).toLocaleDateString('en-CA')\n    };\n    dispatch(registerUser(user));\n  };\n  const determineButtonContent = step => {\n    console.log(\"rendering the button\");\n    switch (step) {\n      case 1:\n        let active = state.dobValid && state.emailValid && state.firstNameValid && state.lastNameValid;\n        console.log(\"active: \", active);\n        return /*#__PURE__*/_jsxDEV(StyledNextButton, {\n          disabled: !active,\n          color: \"black\",\n          active: active,\n          onClick: nextStep,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(StyledNextButton, {\n          active: true,\n          color: \"black\",\n          onClick: nextStep,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(StyledNextButton, {\n          onClick: sendUserInfo,\n          color: \"black\",\n          active: true,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 28\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(StyledNextButton, {\n          disabled: true,\n          color: \"black\",\n          active: false,\n          onClick: () => console.log(\"hello\"),\n          children: step\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return determineButtonContent(step);\n};\n_s(RegisterNextButton, \"OWEexU5OHYex9xaMlSTu7vfLe48=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c2 = RegisterNextButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledNextButton\");\n$RefreshReg$(_c2, \"RegisterNextButton\");","map":{"version":3,"names":["React","styled","useSelector","useDispatch","incrementStep","registerUser","jsxDEV","_jsxDEV","StyledNextButton","button","props","color","theme","colors","blue","black","active","_c","RegisterNextButton","_ref","_s","step","state","reggister","dispatch","nextStep","sendUserInfo","user","firstName","lastName","email","dob","Date","year","month","day","toLocaleDateString","determineButtonContent","console","log","dobValid","emailValid","firstNameValid","lastNameValid","disabled","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/nana/Desktop/twitterApp/frontend/src/features/register/components/RegisterNextButton/RegisterNextButton.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { StyledNextButtonProps } from \"../../../../utils/GlobalInterfaces\";\nimport { AppDispatch, RootState } from \"../../../../redux/Store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { incrementStep, registerUser } from \"../../../../redux/Slices/RegisterSlice\";\n\nexport const StyledNextButton = styled.button<StyledNextButtonProps>`\n    width: 75%;\n    height: 52px;\n    font-size: 17px;\n    color: white;\n    background-color: ${(props) =>props.color === 'blue' ? props.theme.colors.blue : props.theme.colors.black};\n    opacity: ${(props) => props.active ? 1.0 : .5};\n    border-radius: 50px;\n    border:none;\n    cursor: ${(props) => props.active ? \"pointer\" : \"auto\"};\n`;\n\n\ninterface RegisterNextButtonProps{\n    step:number;\n}\n\nexport const RegisterNextButton:React.FC<RegisterNextButtonProps> =({step}) =>{\n    const state = useSelector((state:RootState) => state.reggister);\n    const dispatch:AppDispatch = useDispatch();\n\n\n    const nextStep = () => {\n        dispatch(incrementStep());\n    }\n\n    const sendUserInfo = () => {\n        const user = {\n            firstName: state.firstName,\n            lastName: state.lastName,\n            email: state.email,\n            //dob: cleanDateForRequest(state.dob),\n            dob: new Date(\n                state.dob.year,\n                state.dob.month - 1, // JavaScript months are 0-based, so we subtract 1\n                state.dob.day\n            ).toLocaleDateString('en-CA')\n        }\n        dispatch(registerUser(user));\n    }\n\n    const determineButtonContent = (step:number):JSX.Element => {\n        console.log(\"rendering the button\");\n        switch(step){\n            case 1:\n                let active = state.dobValid && state.emailValid && state.firstNameValid && state.lastNameValid;\n                console.log(\"active: \", active)\n                return <StyledNextButton \n                            disabled={!active}\n                            color={\"black\"}\n                            active={active}\n                            onClick={nextStep}>\n                            Next\n                        </StyledNextButton>\n            case 2:\n                    return <StyledNextButton  \n                                active={true} \n                                color={\"black\"} \n                                onClick={ nextStep}>\n                                Next\n                            </StyledNextButton>\n            case 3:\n                    return <StyledNextButton \n                                onClick={sendUserInfo} \n                                color={\"black\"} \n                                active={true}>\n                                Sign Up\n                            </StyledNextButton>\n            default:\n                return <StyledNextButton \n                            disabled={true}\n                            color={\"black\"}\n                            active={false}\n                            onClick={() => console.log(\"hello\")}>\n                            {step} \n                        </StyledNextButton>\n        }\n    }\n   return determineButtonContent(step);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}