{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  loggedIn: undefined,\n  username: \" \",\n  fromRegister: false,\n  error: false\n};\nexport const loginUser = createAsyncThunk('user/login', async (body, thunkAPI) => {\n  try {\n    const req = await axios.post('http://localhost:8050/auth/login', body);\n    return req.data;\n  } catch (e) {\n    thunkAPI.rejectWithValue(e);\n  }\n});\nexport const verifyUsername = createAsyncThunk('user/find', async (body, thunkAPI) => {\n  try {\n    const req = await axios.post('http://localhost:8050/auth/find', body);\n    return req.data;\n  } catch (e) {\n    thunkAPI.rejectWithValue(e);\n  }\n});\nexport const UserSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setFromRegister(state, action) {\n      state = {\n        ...state,\n        fromRegister: action.payload\n      };\n      return state;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      state = {\n        ...state,\n        loggedIn: {\n          userId: action.payload.user.userId,\n          firstName: action.payload.user.firstName,\n          lastName: action.payload.user.lastName,\n          email: action.payload.user.email,\n          phone: action.payload.user.phone,\n          dateOfBirth: action.payload.user.dateOfBirth,\n          username: action.payload.user.username,\n          bio: action.payload.user.bio,\n          nickname: action.payload.user.nickname,\n          profilePicture: action.payload.user.profilePicture,\n          bannerPicture: action.payload.user.bannerPicture\n        }\n      };\n      return state;\n    });\n    builder.addCase(verifyUsername.fulfilled, (state, action) => {\n      state = {\n        ...state,\n        username: action.payload\n      };\n      return state;\n    });\n    builder.addCase(verifyUsername.pending, (state, actions) => {\n      state = {\n        ...state,\n        error: false\n      };\n      return state;\n    });\n    builder.addCase(verifyUsername.rejected, (state, action) => {\n      state = {\n        ...state,\n        error: true\n      };\n      return state;\n    });\n  }\n});\nexport const {\n  setFromRegister\n} = UserSlice.actions;\nexport default UserSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","loggedIn","undefined","username","fromRegister","error","loginUser","body","thunkAPI","req","post","data","e","rejectWithValue","verifyUsername","UserSlice","name","reducers","setFromRegister","state","action","payload","extraReducers","builder","addCase","fulfilled","userId","user","firstName","lastName","email","phone","dateOfBirth","bio","nickname","profilePicture","bannerPicture","pending","actions","rejected","reducer"],"sources":["/Users/nana/Desktop/twitterApp/frontend/src/redux/Slices/UserSlice.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice,PayloadAction } from \"@reduxjs/toolkit\";\nimport { User } from \"../../utils/GlobalInterfaces\";\nimport axios from \"axios\";\n\n\ninterface UserSliceState{\n    loggedIn: User | undefined;\n    username: string;\n    fromRegister: boolean;\n    error: boolean;\n}\n\ninterface LoginBody{\n    username: string;\n    password: string;\n}\n\nconst initialState:UserSliceState  = {\n    loggedIn: undefined,\n    username: \" \",\n    fromRegister: false,\n    error: false,\n}\n\n\n\ninterface verifyUserBody{\n    email: string;\n    phone: string;\n    username: string;\n\n}\n\nexport const loginUser = createAsyncThunk(\n    'user/login',\n    async (body:LoginBody, thunkAPI ) => {\n        try{\n            const req = await axios.post('http://localhost:8050/auth/login', body);\n            return req.data;\n        }catch(e){\n            thunkAPI.rejectWithValue(e);\n        }\n    }\n);\n\n\n\nexport const verifyUsername = createAsyncThunk(\n    'user/find',\n    async (body:verifyUserBody, thunkAPI) => {\n         try{\n            const req = await axios.post('http://localhost:8050/auth/find', body)\n            return req.data;\n         }catch (e){\n            thunkAPI.rejectWithValue(e);\n        }\n    }\n)\n\n\n\nexport const UserSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setFromRegister(state, action:PayloadAction<boolean>){\n            state = {\n                ...state,\n                fromRegister: action.payload\n            }\n            return state;\n        }\n    },\n\n\n    extraReducers: (builder) => {\n        builder.addCase(loginUser.fulfilled, (state, action) =>{\n            state = {\n                ...state,\n                loggedIn: {\n                    userId: action.payload.user.userId,\n                    firstName: action.payload.user.firstName,\n                    lastName: action.payload.user.lastName,\n                    email: action.payload.user.email,\n                    phone: action.payload.user.phone,\n                    dateOfBirth: action.payload.user.dateOfBirth,\n                    username: action.payload.user.username,\n                    bio: action.payload.user.bio,\n                    nickname: action.payload.user.nickname,\n                    profilePicture: action.payload.user.profilePicture,\n                    bannerPicture: action.payload.user.bannerPicture,\n                }\n            }\n            \n            return state;\n        });\n\n        builder.addCase(verifyUsername.fulfilled, (state, action) => {\n            state = {\n                ...state,\n                username: action.payload\n            };\n            return state;\n        });\n\n\n        builder.addCase(verifyUsername.pending,  (state, actions) => {\n            state= {\n                ...state,\n                error : false,\n            }\n            return state;\n        });\n\n\n        builder.addCase(verifyUsername.rejected, (state, action) => {\n            state = {\n                ...state,\n                error: true,\n            } \n            return state;\n        });\n    }\n});\n\nexport const {setFromRegister} = UserSlice.actions;\n\nexport default UserSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}