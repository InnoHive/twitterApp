{"ast":null,"code":"var _jsxFileName = \"/Users/nana/Desktop/twitterApp/frontend/src/components/TextInput/TextInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n//propps\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//testinput component function\nexport const TextInput = _ref => {\n  _s();\n  let {\n    name,\n    label,\n    errorMessage,\n    onChange,\n    maxLenght,\n    validator\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n  const updateInput = e => {\n    onChange(e);\n    setInputValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-input\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: name,\n        value: inputValue,\n        onChange: updateInput,\n        maxLength: maxLenght,\n        placeholder: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TextInput, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n_c = TextInput;\nvar _c;\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextInput","_ref","_s","name","label","errorMessage","onChange","maxLenght","validator","inputValue","setInputValue","updateInput","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","maxLength","placeholder","_c","$RefreshReg$"],"sources":["/Users/nana/Desktop/twitterApp/frontend/src/components/TextInput/TextInput.tsx"],"sourcesContent":["\nimport React, {useState, useEffect} from 'react'\n\n\n//propps\ninterface TextInputProps {\n    name: string;\n    label: string;\n    errorMessage: string;\n    onChange(e:React.ChangeEvent<HTMLInputElement>):void;\n    maxLenght?: number\n    validator?(value: string):boolean;\n}\n\n\n//testinput component function\nexport const TextInput: React.FC<TextInputProps> = ({name, label, errorMessage, onChange, maxLenght, validator}) => {\n\n    const [inputValue, setInputValue] = useState<string>('');\n\n    const updateInput = (e:React.ChangeEvent<HTMLInputElement>) => {\n        onChange(e);\n        setInputValue(e.target.value);\n    }\n\n  return (\n    <div className='text-input'>\n        <div>\n            <span>\n                {label}\n            </span>\n            <input\n                type='text'\n                name={name}\n                value={inputValue}\n                onChange={updateInput}\n                maxLength={maxLenght}\n                placeholder={label}\n                />\n        </div>\n    </div>\n  )\n}\n\n"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAkB,OAAO;;AAGhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWA;AACA,OAAO,MAAMC,SAAmC,GAAGC,IAAA,IAAiE;EAAAC,EAAA;EAAA,IAAhE;IAACC,IAAI;IAAEC,KAAK;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAAP,IAAA;EAE3G,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAExD,MAAMc,WAAW,GAAIC,CAAqC,IAAK;IAC3DN,QAAQ,CAACM,CAAC,CAAC;IACXF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAEH,oBACEf,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAC,QAAA,eACvBjB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QAAAiB,QAAA,EACKZ;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACPrB,OAAA;QACIsB,IAAI,EAAC,MAAM;QACXlB,IAAI,EAAEA,IAAK;QACXW,KAAK,EAAEL,UAAW;QAClBH,QAAQ,EAAEK,WAAY;QACtBW,SAAS,EAAEf,SAAU;QACrBgB,WAAW,EAAEnB;MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAlB,EAAA,CA1BYF,SAAmC;AAAAwB,EAAA,GAAnCxB,SAAmC;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}