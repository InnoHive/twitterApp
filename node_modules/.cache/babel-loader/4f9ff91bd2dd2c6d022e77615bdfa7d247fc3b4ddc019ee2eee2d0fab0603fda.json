{"ast":null,"code":"var _jsxFileName = \"/Users/nana/Desktop/twitterApp/frontend/src/features/register/components/RegisterEmailInput/RegisterEmailInputs.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ValidatedTextInput } from \"../../../../components/ValidatedInput/ValidatedTextInput\";\nimport { useDispatch } from \"react-redux\";\nimport { updateRegister } from \"../../../../redux/Slices/RegisterSlice\";\nimport { validateEmail } from \"../../../../services/Validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterEmailInput = () => {\n  _s();\n  const [validEmail, setValidEmail] = useState(true);\n  const dispatch = useDispatch();\n  const updateEmail = e => {\n    dispatch(updateRegister({\n      name: \"email\",\n      value: e.target.value\n    }));\n    let valid = validateEmail(e.target.value);\n    setValidEmail(valid);\n    dispatch(updateRegister({\n      name: \"emailValid\",\n      value: valid\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-email-input\",\n    children: /*#__PURE__*/_jsxDEV(ValidatedTextInput, {\n      valid: validEmail,\n      label: \"email\",\n      name: \"email\",\n      changeValue: updateEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterEmailInput, \"pDcGA+mRRrQ17/pwSlHH1coKf6E=\", false, function () {\n  return [useDispatch];\n});\n_c = RegisterEmailInput;\nvar _c;\n$RefreshReg$(_c, \"RegisterEmailInput\");","map":{"version":3,"names":["React","useState","ValidatedTextInput","useDispatch","updateRegister","validateEmail","jsxDEV","_jsxDEV","RegisterEmailInput","_s","validEmail","setValidEmail","dispatch","updateEmail","e","name","value","target","valid","className","children","label","changeValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nana/Desktop/twitterApp/frontend/src/features/register/components/RegisterEmailInput/RegisterEmailInputs.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { ValidatedTextInput } from \"../../../../components/ValidatedInput/ValidatedTextInput\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../../../redux/Store\";\nimport { updateRegister } from \"../../../../redux/Slices/RegisterSlice\";\nimport { validateEmail } from \"../../../../services/Validators\";\n\nexport const RegisterEmailInput:React.FC = () => {\n    \n    const [validEmail, setValidEmail] = useState<boolean>(true);\n\n    const dispatch:AppDispatch = useDispatch();\n\n    const updateEmail = (e:React.ChangeEvent<HTMLInputElement>): void =>{\n        dispatch(updateRegister({\n            name: \"email\",\n            value:e.target.value\n        }));\n\n        let valid  = validateEmail(e.target.value);\n        setValidEmail(valid);\n\n        dispatch(updateRegister({\n            name: \"emailValid\",\n            value: valid\n        }))\n    }\n\n    return(\n        <div className=\"register-email-input\">\n            <ValidatedTextInput valid={validEmail} label={\"email\"} name={\"email\"} changeValue={updateEmail} />\n        </div>\n    )\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAkB,OAAO;AAChD,SAASC,kBAAkB,QAAQ,0DAA0D;AAC7F,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,cAAc,QAAQ,wCAAwC;AACvE,SAASC,aAAa,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,kBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAU,IAAI,CAAC;EAE3D,MAAMW,QAAoB,GAAGT,WAAW,CAAC,CAAC;EAE1C,MAAMU,WAAW,GAAIC,CAAqC,IAAU;IAChEF,QAAQ,CAACR,cAAc,CAAC;MACpBW,IAAI,EAAE,OAAO;MACbC,KAAK,EAACF,CAAC,CAACG,MAAM,CAACD;IACnB,CAAC,CAAC,CAAC;IAEH,IAAIE,KAAK,GAAIb,aAAa,CAACS,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC;IAC1CL,aAAa,CAACO,KAAK,CAAC;IAEpBN,QAAQ,CAACR,cAAc,CAAC;MACpBW,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAEE;IACX,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACIX,OAAA;IAAKY,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACjCb,OAAA,CAACL,kBAAkB;MAACgB,KAAK,EAAER,UAAW;MAACW,KAAK,EAAE,OAAQ;MAACN,IAAI,EAAE,OAAQ;MAACO,WAAW,EAAET;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjG,CAAC;AAGd,CAAC;AAAAjB,EAAA,CA3BYD,kBAA2B;EAAA,QAIPL,WAAW;AAAA;AAAAwB,EAAA,GAJ/BnB,kBAA2B;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}