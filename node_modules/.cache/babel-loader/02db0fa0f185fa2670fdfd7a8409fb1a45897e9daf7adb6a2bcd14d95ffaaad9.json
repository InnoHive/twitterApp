{"ast":null,"code":"var _jsxFileName = \"/Users/nana/Desktop/twitterApp/frontend/src/components/ValidatedInput/ValidatedInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { StyledInputBox, StyledInputLabel } from './StyledInput';\nimport { determineValidatedStyles } from '../../utils/DetermineStyleUtils';\nimport './ValidatedInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ValidatedInput = _ref => {\n  _s();\n  let {\n    name,\n    label,\n    errorMessage,\n    validator,\n    changeValue,\n    attribute\n  } = _ref;\n  const [validatedState, SetValidateState] = useState({\n    active: false,\n    valid: true,\n    typeIn: false,\n    labelActive: false,\n    labelColor: 'gray',\n    value: ''\n  });\n  useEffect(() => {\n    SetValidateState(determineValidatedStyles(validatedState, validator));\n  }, [validatedState.active, validatedState.typeIn, validatedState.value, validatedState.labelActive, validatedState.labelColor, validator]);\n  const focus = e => {\n    SetValidateState({\n      ...validatedState,\n      active: !(validatedState !== null && validatedState !== void 0 && validatedState.active)\n    });\n  };\n\n  //update value\n  const updateValue = e => {\n    //changeValue(e);\n    SetValidateState({\n      ...validatedState,\n      valid: validator(e.target.value),\n      typeIn: true,\n      value: e.target.value\n    });\n    changeValue(e);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"validated-input\",\n    children: [/*#__PURE__*/_jsxDEV(StyledInputBox, {\n      active: validatedState.active,\n      valid: validatedState.valid,\n      children: [/*#__PURE__*/_jsxDEV(StyledInputLabel, {\n        color: validatedState.labelColor,\n        active: validatedState.labelActive,\n        valid: validatedState.valid,\n        children: [label, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"validated-inout-value\",\n        onFocus: focus,\n        onBlur: focus,\n        onChange: updateValue,\n        ...attribute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), validatedState.valid ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ValidatedInput, \"05inmHyUTsVyw8bZs3VvdYlus+I=\");\n_c = ValidatedInput;\nvar _c;\n$RefreshReg$(_c, \"ValidatedInput\");","map":{"version":3,"names":["React","useState","useEffect","StyledInputBox","StyledInputLabel","determineValidatedStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","ValidatedInput","_ref","_s","name","label","errorMessage","validator","changeValue","attribute","validatedState","SetValidateState","active","valid","typeIn","labelActive","labelColor","value","focus","e","updateValue","target","className","children","color","fileName","_jsxFileName","lineNumber","columnNumber","onFocus","onBlur","onChange","_c","$RefreshReg$"],"sources":["/Users/nana/Desktop/twitterApp/frontend/src/components/ValidatedInput/ValidatedInput.tsx"],"sourcesContent":["import React, { useState, useEffect}from 'react'\n\nimport { ValidatedInputState } from '../../utils/GlobalInterfaces';\nimport { StyledInputBox, StyledInputLabel } from './StyledInput'\nimport { determineValidatedStyles } from '../../utils/DetermineStyleUtils';\nimport './ValidatedInput.css'\n\ninterface ValidatedUserInputProps  {\n    name: string;\n    label : string;\n    errorMessage : string;\n    validator(value:string) : boolean;\n    changeValue(e:React.ChangeEvent<HTMLInputElement>): void;\n    attribute?:Record<string, string | number | boolean>\n}\n\nexport const ValidatedInput:React.FC<ValidatedUserInputProps> = ({\n    name,\n    label,\n    errorMessage,\n    validator,\n    changeValue,\n    attribute\n}) => {\n\n    const[validatedState, SetValidateState] = useState<ValidatedInputState>({\n        active: false,\n        valid: true,\n        typeIn: false,\n        labelActive: false,\n        labelColor: 'gray',\n        value : ''\n    });\n\n\n    useEffect(() => {\n            SetValidateState(determineValidatedStyles(validatedState, validator));\n    },[validatedState.active, validatedState.typeIn, validatedState.value, validatedState.labelActive, validatedState.labelColor, validator]);\n        \n\n    const focus = (e:React.FocusEvent<HTMLInputElement>) : void => {\n        SetValidateState({\n            ...validatedState, \n            active: !validatedState?.active\n        });\n    }\n\n\n    //update value\n    const updateValue = (e:React.ChangeEvent<HTMLInputElement>): void => {\n        //changeValue(e);\n        SetValidateState({\n          ...validatedState, \n            valid: validator(e.target.value),\n            typeIn: true,\n            value: e.target.value\n        });\n        changeValue(e);\n    }\n\n \n    \n  return (\n    <div className='validated-input'>\n        <StyledInputBox active={validatedState.active} valid={validatedState.valid}>\n            <StyledInputLabel color={validatedState.labelColor} active={validatedState.labelActive} valid={validatedState.valid}>{label} </StyledInputLabel>\n            <input className='validated-inout-value'\n                onFocus={focus}\n                onBlur={focus}\n                onChange={updateValue}\n                {...attribute}\n            />\n        </StyledInputBox>\n        {validatedState.valid ? <></>:<span>{errorMessage}</span>}\n    </div>\n  )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}