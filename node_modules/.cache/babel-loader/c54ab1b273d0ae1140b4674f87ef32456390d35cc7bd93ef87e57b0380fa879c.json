{"ast":null,"code":"var _jsxFileName = \"/Users/nana/Desktop/twitterApp/frontend/src/features/register/components/RegisterDateInput/RegisterDateInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ValidatedDateSelector } from \"../../../../components/ValidatedInput/ValidatedDateSelector\";\nimport { getMonths, getDays, getYears } from \"../../../../utils/DateUtils\";\nimport { updateRegister } from \"../../../../redux/Slices/RegisterSlice\";\nimport { validateDob } from \"../../../../services/Validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterDateInput = _ref => {\n  _s();\n  let {\n    date\n  } = _ref;\n  const state = useSelector(state => state.reggister);\n  const dispatch = useDispatch();\n  const [valid, setValid] = useState(true);\n  const updateState = (name, value) => {\n    dispatch(updateRegister({\n      name,\n      value\n    }));\n  };\n  useEffect(() => {\n    let {\n      day,\n      month,\n      year\n    } = state.dob;\n    if (day && month && year) {\n      setValid(validateDob({\n        month,\n        day,\n        year\n      }));\n      dispatch(updateRegister({\n        name: 'dobValid',\n        value: valid\n      }));\n    }\n  }, [state.dob.day, state.dob.month, state.dob.year, state.dobValid, valid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-date\",\n    children: [/*#__PURE__*/_jsxDEV(ValidatedDateSelector, {\n      style: \"validated-month\",\n      valid: valid,\n      name: \"Month\",\n      dropDown: getMonths,\n      dispatcher: updateState,\n      data: date.month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ValidatedDateSelector, {\n      style: \"validated-day\",\n      valid: valid,\n      name: \"Day\",\n      dropDown: getDays,\n      dispatcher: updateState,\n      data: date.day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ValidatedDateSelector, {\n      style: \"validated-year\",\n      valid: valid,\n      name: \"Year\",\n      dropDown: getYears,\n      dispatcher: updateState,\n      data: date.year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterDateInput, \"VWjZ7L5jDAPCWH2Ad+fUKr12rOs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = RegisterDateInput;\nvar _c;\n$RefreshReg$(_c, \"RegisterDateInput\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","ValidatedDateSelector","getMonths","getDays","getYears","updateRegister","validateDob","jsxDEV","_jsxDEV","RegisterDateInput","_ref","_s","date","state","reggister","dispatch","valid","setValid","updateState","name","value","day","month","year","dob","dobValid","className","children","style","dropDown","dispatcher","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nana/Desktop/twitterApp/frontend/src/features/register/components/RegisterDateInput/RegisterDateInput.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { useDispatch, useSelector} from \"react-redux\";\n\nimport { ValidatedDateSelector } from \"../../../../components/ValidatedInput/ValidatedDateSelector\";\nimport { getMonths, getDays, getYears } from \"../../../../utils/DateUtils\";\nimport { AppDispatch, RootState } from \"../../../../redux/Store\";\nimport { updateRegister } from \"../../../../redux/Slices/RegisterSlice\";\nimport { validateDob } from \"../../../../services/Validators\";\nimport { Dob } from \"../../../../utils/GlobalInterfaces\";\n\ninterface  RegisterDateInputProps{\n    date: Dob;\n}\n\nexport const RegisterDateInput:React.FC<RegisterDateInputProps> = ({date}) =>{\n    \n    const state = useSelector((state:RootState) => state.reggister);\n    const dispatch:AppDispatch = useDispatch();\n    const [valid, setValid] = useState(true);\n\nconst updateState = (name:string, value:string|number|boolean ):void =>{\n    dispatch (updateRegister({\n        name,\n        value\n    }));\n}\n\nuseEffect(() => {\n     let {day, month, year} = state.dob;\n     if(day && month && year ){\n        setValid(validateDob({\n            month,\n            day, \n            year,\n        }));\n        dispatch(updateRegister({name:'dobValid', value:valid}));\n     }\n},[state.dob.day, state.dob.month, state.dob.year, state.dobValid, valid]);\n\n\n\n    return (\n        <div className=\"register-date\">\n             <ValidatedDateSelector\n             style={\"validated-month\"}\n             valid = {valid}\n             name={\"Month\"}\n             dropDown={getMonths}\n             dispatcher={updateState}\n             data={date.month}\n             />\n\n            <ValidatedDateSelector\n             style={\"validated-day\"}\n             valid = {valid}\n             name={\"Day\"}\n             dropDown={getDays}\n             dispatcher={updateState}\n             data={date.day}\n             />\n\n            <ValidatedDateSelector\n             style={\"validated-year\"}\n             valid = {valid}\n             name={\"Year\"}\n             dropDown={getYears}\n             dispatcher={updateState}\n             data={date.year}\n             />\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}