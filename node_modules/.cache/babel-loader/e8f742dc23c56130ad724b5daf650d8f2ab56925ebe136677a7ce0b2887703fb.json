{"ast":null,"code":"var _jsxFileName = \"/Users/nana/Desktop/twitterApp/frontend/src/components/ValidatedInput/ValidatedTextInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { StyledInputBox, StyledInputLabel } from \"./StyledInput\";\nimport { determineValidatedTextLabel } from \"../../utils/DetermineStyleUtils\";\nimport './ValidatedInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ValidatedTextInput = _ref => {\n  _s();\n  let {\n    valid,\n    name,\n    label,\n    changeValue,\n    data\n  } = _ref;\n  const [value, setValue] = useState(data ? data : '');\n  const [borderActive, setBoarderActive] = useState(false);\n  const [labelActive, setLabelActive] = useState(false);\n  const [color, setColor] = useState('');\n  const focus = () => {\n    setBoarderActive(!borderActive);\n    if (!value) {\n      setLabelActive(!labelActive);\n    }\n  };\n  const update = e => {\n    setValue(e.target.value);\n    console.log(\"Send the infor back to the dispatcher\");\n    changeValue(e);\n  };\n  useEffect(() => {\n    if (value && !labelActive) {\n      setLabelActive(true);\n    }\n    setColor(determineValidatedTextLabel(borderActive, valid));\n  }, [valid, value, borderActive, labelActive, color]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"validated-input\",\n    children: [/*#__PURE__*/_jsxDEV(StyledInputBox, {\n      active: borderActive,\n      valid: valid,\n      children: /*#__PURE__*/_jsxDEV(StyledInputLabel, {\n        color: color,\n        active: labelActive,\n        valid: valid,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"validated-input-value\",\n      name: name,\n      onFocus: focus,\n      onBlur: focus,\n      onChange: update,\n      value: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ValidatedTextInput, \"wsYugUvV5abiCgxjmB1XubKXa14=\");\n_c = ValidatedTextInput;\nvar _c;\n$RefreshReg$(_c, \"ValidatedTextInput\");","map":{"version":3,"names":["React","useState","useEffect","StyledInputBox","StyledInputLabel","determineValidatedTextLabel","jsxDEV","_jsxDEV","ValidatedTextInput","_ref","_s","valid","name","label","changeValue","data","value","setValue","borderActive","setBoarderActive","labelActive","setLabelActive","color","setColor","focus","update","e","target","console","log","className","children","active","fileName","_jsxFileName","lineNumber","columnNumber","onFocus","onBlur","onChange","_c","$RefreshReg$"],"sources":["/Users/nana/Desktop/twitterApp/frontend/src/components/ValidatedInput/ValidatedTextInput.tsx"],"sourcesContent":[" import React, {useState, useEffect} from \"react\";\nimport { StyledInputBox, StyledInputLabel } from \"./StyledInput\";\nimport { determineValidatedTextLabel } from \"../../utils/DetermineStyleUtils\";\n\nimport './ValidatedInput.css';\n\n\n\n\n interface ValidatedTextInputProps{\n    valid: boolean;\n    name:string;\n    label:string;\n    changeValue(e:React.ChangeEvent<HTMLInputElement>):void;\n    data?: string\n }\n\n export const ValidatedTextInput:React.FC<ValidatedTextInputProps> = ({valid, name, label, changeValue, data}) => {\n    \n    const [value, setValue] = useState<string>(data? data: '');\n    const[borderActive, setBoarderActive] = useState<boolean> (false);\n    const [ labelActive, setLabelActive] = useState<boolean>(false);\n    const [color, setColor] = useState<string>('');\n\n\n    const focus = ():void => {\n        setBoarderActive(!borderActive)\n        if(!value){\n            setLabelActive(!labelActive);\n        }\n    }\n\n    const update = (e:React.ChangeEvent<HTMLInputElement>):void =>{\n        setValue(e.target.value);\n        console.log(\"Send the infor back to the dispatcher\");\n        changeValue(e);\n    }\n\n\n    useEffect( () =>{\n        if(value && !labelActive){\n            setLabelActive(true);\n        }\n        setColor(determineValidatedTextLabel(borderActive, valid ));\n    }, [valid, value, borderActive, labelActive, color])\n\n\n    return (\n        <div className=\"validated-input\">\n            <StyledInputBox active = {borderActive} valid={valid}>\n                <StyledInputLabel color={color} active={labelActive} valid={valid}>\n                    {label}\n                </StyledInputLabel>\n            </StyledInputBox>\n\n            <input className=\"validated-input-value\" \n                name={name} \n                onFocus={focus}\n                onBlur={focus}\n                onChange={update}\n                value={data}\n                />\n        </div>\n    )\n }\n\n"],"mappings":";;AAAC,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,eAAe;AAChE,SAASC,2BAA2B,QAAQ,iCAAiC;AAE7E,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAa7B,OAAO,MAAMC,kBAAoD,GAAGC,IAAA,IAA6C;EAAAC,EAAA;EAAA,IAA5C;IAACC,KAAK;IAAEC,IAAI;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAI,CAAC,GAAAN,IAAA;EAEzG,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAASc,IAAI,GAAEA,IAAI,GAAE,EAAE,CAAC;EAC1D,MAAK,CAACG,YAAY,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAW,KAAK,CAAC;EACjE,MAAM,CAAEmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAU,KAAK,CAAC;EAC/D,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAS,EAAE,CAAC;EAG9C,MAAMuB,KAAK,GAAGA,CAAA,KAAW;IACrBL,gBAAgB,CAAC,CAACD,YAAY,CAAC;IAC/B,IAAG,CAACF,KAAK,EAAC;MACNK,cAAc,CAAC,CAACD,WAAW,CAAC;IAChC;EACJ,CAAC;EAED,MAAMK,MAAM,GAAIC,CAAqC,IAAS;IAC1DT,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACX,KAAK,CAAC;IACxBY,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACpDf,WAAW,CAACY,CAAC,CAAC;EAClB,CAAC;EAGDxB,SAAS,CAAE,MAAK;IACZ,IAAGc,KAAK,IAAI,CAACI,WAAW,EAAC;MACrBC,cAAc,CAAC,IAAI,CAAC;IACxB;IACAE,QAAQ,CAAClB,2BAA2B,CAACa,YAAY,EAAEP,KAAM,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACA,KAAK,EAAEK,KAAK,EAAEE,YAAY,EAAEE,WAAW,EAAEE,KAAK,CAAC,CAAC;EAGpD,oBACIf,OAAA;IAAKuB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BxB,OAAA,CAACJ,cAAc;MAAC6B,MAAM,EAAId,YAAa;MAACP,KAAK,EAAEA,KAAM;MAAAoB,QAAA,eACjDxB,OAAA,CAACH,gBAAgB;QAACkB,KAAK,EAAEA,KAAM;QAACU,MAAM,EAAEZ,WAAY;QAACT,KAAK,EAAEA,KAAM;QAAAoB,QAAA,EAC7DlB;MAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAEjB7B,OAAA;MAAOuB,SAAS,EAAC,uBAAuB;MACpClB,IAAI,EAAEA,IAAK;MACXyB,OAAO,EAAEb,KAAM;MACfc,MAAM,EAAEd,KAAM;MACde,QAAQ,EAAEd,MAAO;MACjBT,KAAK,EAAED;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb,CAAC;AAAA1B,EAAA,CA/CYF,kBAAoD;AAAAgC,EAAA,GAApDhC,kBAAoD;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}