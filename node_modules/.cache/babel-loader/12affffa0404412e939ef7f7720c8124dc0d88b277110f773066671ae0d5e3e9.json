{"ast":null,"code":"var _jsxFileName = \"/Users/nana/Desktop/twitterApp/frontend/src/utils/DateUtils.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MONTH = ['', 'January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n//dropdown for month of the year\nexport const getMonths = () => {\n  return MONTH.map((month, index) => {\n    if (index === 0) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: index\n      }, month, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: index,\n        children: month\n      }, month, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }\n  });\n};\n\n//drop down for days of themonth\nexport const getDays = () => {\n  let options = [];\n  for (let i = 0; i < 32; i++) {\n    if (i === 0) {\n      options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 0\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }, this));\n    } else {\n      options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 26\n      }, this));\n    }\n  }\n  return options;\n};\nexport const getYears = () => {\n  let options = [];\n  for (let i = 2023; i > 1902; i--) {\n    if (i === 2024) {\n      options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 0\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this));\n    } else {\n      options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 0,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 26\n      }, this));\n    }\n  }\n  return options;\n};","map":{"version":3,"names":["MONTH","getMonths","map","month","index","_jsxDEV","value","fileName","_jsxFileName","lineNumber","columnNumber","children","getDays","options","i","push","getYears"],"sources":["/Users/nana/Desktop/twitterApp/frontend/src/utils/DateUtils.tsx"],"sourcesContent":["\n\nconst MONTH: string [] = [\n    '',\n    'January',\n    'Febuary',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n];\n\n\n//dropdown for month of the year\nexport const getMonths = ():JSX.Element[] => {\n    return MONTH.map((month, index) => {\n        if(index === 0){\n            return <option value={index} key={month}></option>\n        }\n        else{\n            return <option value={index} key={month}>{month}</option>\n        }\n    })\n}\n\n\n//drop down for days of themonth\nexport const getDays = ():JSX.Element[] => {\n    let options:JSX.Element[] =[];\n\n    for(let i = 0; i<32; i++){\n        if(i===0){\n             options.push(<option value={0} key={i}></option>)\n        }else{\n            options.push(<option value={i} key={i}>{i}</option>)\n        }\n    }\n    return options;\n}\n\n\nexport const getYears = ():JSX.Element[] =>{\n    let options:JSX.Element[]= [];\n    for(let i = 2023; i>1902; i--){\n        if(i=== 2024){\n            options.push(<option value={0} key={i}></option>)\n        }else{\n            options.push(<option value={0} key={i}>{i}</option>)\n        }\n    }\n    return options;\n}"],"mappings":";;AAEA,MAAMA,KAAgB,GAAG,CACrB,EAAE,EACF,SAAS,EACT,SAAS,EACT,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACb;;AAGD;AACA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAoB;EACzC,OAAOD,KAAK,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC/B,IAAGA,KAAK,KAAK,CAAC,EAAC;MACX,oBAAOC,OAAA;QAAQC,KAAK,EAAEF;MAAM,GAAMD,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IACtD,CAAC,MACG;MACA,oBAAOL,OAAA;QAAQC,KAAK,EAAEF,KAAM;QAAAO,QAAA,EAAcR;MAAK,GAAbA,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC;IAC7D;EACJ,CAAC,CAAC;AACN,CAAC;;AAGD;AACA,OAAO,MAAME,OAAO,GAAGA,CAAA,KAAoB;EACvC,IAAIC,OAAqB,GAAE,EAAE;EAE7B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAC,EAAE,EAAEA,CAAC,EAAE,EAAC;IACrB,IAAGA,CAAC,KAAG,CAAC,EAAC;MACJD,OAAO,CAACE,IAAI,eAACV,OAAA;QAAQC,KAAK,EAAE;MAAE,GAAMQ,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,CAAC;IACtD,CAAC,MAAI;MACDG,OAAO,CAACE,IAAI,eAACV,OAAA;QAAQC,KAAK,EAAEQ,CAAE;QAAAH,QAAA,EAAUG;MAAC,GAALA,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,CAAC;IACxD;EACJ;EACA,OAAOG,OAAO;AAClB,CAAC;AAGD,OAAO,MAAMG,QAAQ,GAAGA,CAAA,KAAmB;EACvC,IAAIH,OAAqB,GAAE,EAAE;EAC7B,KAAI,IAAIC,CAAC,GAAG,IAAI,EAAEA,CAAC,GAAC,IAAI,EAAEA,CAAC,EAAE,EAAC;IAC1B,IAAGA,CAAC,KAAI,IAAI,EAAC;MACTD,OAAO,CAACE,IAAI,eAACV,OAAA;QAAQC,KAAK,EAAE;MAAE,GAAMQ,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,CAAC;IACrD,CAAC,MAAI;MACDG,OAAO,CAACE,IAAI,eAACV,OAAA;QAAQC,KAAK,EAAE,CAAE;QAAAK,QAAA,EAAUG;MAAC,GAALA,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,CAAC;IACxD;EACJ;EACA,OAAOG,OAAO;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}